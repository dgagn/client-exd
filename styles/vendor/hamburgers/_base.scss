@use "sass:math";

@use "config" as *;

.hamburger {
    display: inline-block;
    margin: 0;
    overflow: visible;

    // Normalize (<button>)
    font: inherit;
    color: inherit;
    text-transform: none;
    cursor: pointer;
    background-color: transparent;
    border: 0;
    transition-timing-function: linear;
    transition-duration: 0.15s;
    transition-property: opacity, filter;

    &:hover {
        @if $hamburger-hover-use-filter == true {
            filter: $hamburger-hover-filter;
        }

        @else {
            opacity: $hamburger-hover-opacity;
        }
    }

    &.is-active {
        &:hover {
            @if $hamburger-hover-use-filter == true {
                filter: $hamburger-active-hover-filter;
            }

            @else {
                opacity: $hamburger-active-hover-opacity;
            }
        }

        .hamburger-inner,
        .hamburger-inner::before,
        .hamburger-inner::after {
            background-color: $hamburger-active-layer-color;
        }
    }
}

.hamburger-box {
    position: relative;
    width: $hamburger-layer-width;
    height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
}

.hamburger-inner {
    top: 50%;
    display: block;
    margin-top: math.div($hamburger-layer-height, -2);

    &,
    &::before,
    &::after {
        position: absolute;
        width: $hamburger-layer-width;
        height: $hamburger-layer-height;
        background-color: $hamburger-layer-color;
        border-radius: $hamburger-layer-border-radius;
        transition-timing-function: ease;
        transition-duration: 0.15s;
        transition-property: transform;
    }

    &::before,
    &::after {
        display: block;
        content: "";
    }

    &::before {
        top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
    }

    &::after {
        bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
    }
}
